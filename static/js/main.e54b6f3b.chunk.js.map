{"version":3,"sources":["api/movies.js","features/movies/moviesSlice.js","features/movies/SingleMovieCard.js","features/filters/categoriesSlice.js","components/Spinner.js","features/pages/pageSlice.js","features/sizepages/sizepagesSlice.js","features/pages/FormPages.js","features/movies/MoviesList.js","helpers/usePaginate.js","features/filters/Category.js","features/sizepages/SizePages.js","features/app/MoviesAppBar.js","features/app/Header.js","features/app/Footer.js","App.js","app/store.js","index.js"],"names":["movies","id","title","category","likes","dislikes","movies$","Promise","resolve","reject","setTimeout","fetchMovies","createAsyncThunk","moviesSlice","createSlice","name","initialState","status","error","reducers","reactionAdded","state","action","payload","movieId","reaction","existingMovie","find","movie","movieDeleted","movieIndex","findIndex","console","log","splice","extraReducers","builder","addCase","pending","fulfilled","concat","rejected","message","actions","SingleMovieCard","x","dispatch","useDispatch","Card","sx","height","display","margin","flexDirection","CardHeader","avatar","Avatar","bgcolor","red","subheader","CardContent","flexGrow","Typography","variant","color","CardActions","disableSpacing","IconButton","onClick","ThumbUp","ThumbDown","Delete","CategoryFilter","All","categoriesSlice","categoryChanged","Spinner","text","size","header","className","style","width","pageSlice","page","pageNext","pagePrevious","pageSelected","sizepagesSlice","sizepages","sizepagesChanged","FormPages","props","firstElementIndex","lastElementIndex","numberElements","numberPages","useSelector","theme","useTheme","maxSteps","Grid","container","justifyContent","item","xs","sm","md","m","textAlign","alignItems","MobileStepper","steps","position","activeStep","nextButton","Button","disabled","direction","backButton","MovieExcerpt","MoviesList","selectMoviesError","moviesStatus","selectMoviesStatus","selectCategory","filteredMovies","filter","selectMoviesByCategory","useEffect","content","selectPage","selectSizepages","Math","min","length","visibleMovies","slice","max","ceil","usePaginate","spacing","map","Category","categories","Set","elem","FormControl","minWidth","InputLabel","label","Select","labelId","value","onChange","event","target","MenuItem","SIZEPAGES","SizePages","marginLeft","MoviesAppBar","AppBar","Toolbar","mr","noWrap","MoviesAppHeader","Box","pt","pb","Container","maxWidth","component","align","gutterBottom","paragraph","MoviesAppFooter","minHeight","CssBaseline","py","px","mt","backgroundColor","grey","App","store","configureStore","reducer","moviesReducer","categoriesReducer","sizepagesReducer","pageReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e54b6f3b.chunk.js","sourcesContent":["export const movies = [\r\n    {\r\n        id: '1',\r\n        title: 'Oceans 8',\r\n        category: 'Comedy',\r\n        likes: 4,\r\n        dislikes: 1\r\n    }, {\r\n        id: '2',\r\n        title: 'Midnight Sun',\r\n        category: 'Comedy',\r\n        likes: 2,\r\n        dislikes: 0\r\n    }, {\r\n        id: '3',\r\n        title: 'Les indestructibles 2',\r\n        category: 'Animation',\r\n        likes: 3,\r\n        dislikes: 1\r\n    }, {\r\n        id: '4',\r\n        title: 'Sans un bruit',\r\n        category: 'Thriller',\r\n        likes: 6,\r\n        dislikes: 6\r\n    }, {\r\n        id: '5',\r\n        title: 'Creed II',\r\n        category: 'Drame',\r\n        likes: 16,\r\n        dislikes: 2\r\n    }, {\r\n        id: '6',\r\n        title: 'Pulp Fiction',\r\n        category: 'Thriller',\r\n        likes: 11,\r\n        dislikes: 3\r\n    }, {\r\n        id: '7',\r\n        title: 'Pulp Fiction',\r\n        category: 'Thriller',\r\n        likes: 12333,\r\n        dislikes: 32\r\n    }, {\r\n        id: '8',\r\n        title: 'Seven',\r\n        category: 'Thriller',\r\n        likes: 2,\r\n        dislikes: 1\r\n    }, {\r\n        id: '9',\r\n        title: 'Inception',\r\n        category: 'Thriller',\r\n        likes: 2,\r\n        dislikes: 1\r\n    }, {\r\n        id: '10',\r\n        title: 'Gone Girl',\r\n        category: 'Thriller',\r\n        likes: 22,\r\n        dislikes: 12\r\n    },\r\n]\r\n\r\nexport const movies$ = new Promise((resolve, reject) => setTimeout(resolve, 400, movies));\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport { movies$ } from \"../../api/movies\";\nconst initialState = {\n  movies: [],\n  status: \"idle\",\n  error: null,\n};\n\nexport const fetchMovies = createAsyncThunk(\"movies/fetchMovies\", () => {\n  return movies$;\n});\n\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    reactionAdded(state, action) {\n      const { movieId, reaction } = action.payload;\n      const existingMovie = state.movies.find((movie) => movie.id === movieId);\n      if (existingMovie) {\n        //existingMovie.reactions[reaction]++\n        existingMovie[reaction]++;\n      }\n    },\n    movieDeleted(state, action) {\n      const { movieId } = action.payload;\n      //state.filter((movie) => movie.id !== action.payload)\n      const movieIndex = state.movies.findIndex(\n        (movie) => movie.id === movieId\n      );\n      console.log(\"movieIndex = \", movieIndex);\n      if (movieIndex >= 0) {\n        //existingMovie.reactions[reaction]++\n        state.movies.splice(movieIndex, 1);\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchMovies.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchMovies.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        // Add any fetched movies to the array\n        state.movies = state.movies.concat(action.payload);\n      })\n      .addCase(fetchMovies.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { reactionAdded, movieDeleted } = moviesSlice.actions;\nexport default moviesSlice.reducer;\n\nexport const selectAllMovies = (state) => state.movies.movies;\nexport const selectMoviesStatus = (state) => state.movies.status;\nexport const selectMoviesError = (state) => state.movies.error;\n\nexport const selectMoviesByCategory = (state, category) =>\n  category === \"All\"\n    ? state.movies.movies\n    : state.movies.movies.filter((movie) => movie.category === category);\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { red } from \"@mui/material/colors\";\nimport { ThumbUp, ThumbDown, Delete } from \"@mui/icons-material\";\nimport { useDispatch } from \"react-redux\";\nimport { reactionAdded, movieDeleted } from \"./moviesSlice\";\n\nexport function SingleMovieCard({ movie }) {\n  const { title, category, id, likes, dislikes } = movie;\n  const x = 100 * id;\n  const dispatch = useDispatch();\n  return (\n    <Card\n      sx={{\n        height: \"100%\",\n        display: \"flex\",\n        margin: \"5px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: red[x] }} aria-label=\"recipe\">\n            {id}\n          </Avatar>\n        }\n        title={title}\n        subheader={category}\n      />\n      <CardContent sx={{ flexGrow: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {`This is a test description for movie ${title}`}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          aria-label=\"likes movie\"\n          onClick={() =>\n            dispatch(reactionAdded({ movieId: movie.id, reaction: \"likes\" }))\n          }\n        >\n          <ThumbUp />\n          {likes}\n        </IconButton>\n        <IconButton\n          aria-label=\"dislikes movie\"\n          onClick={() =>\n            dispatch(reactionAdded({ movieId: movie.id, reaction: \"dislikes\" }))\n          }\n        >\n          <ThumbDown />\n          {dislikes}\n        </IconButton>\n        <IconButton\n          aria-label=\"delete movie\"\n          onClick={() => dispatch(movieDeleted({ movieId: movie.id }))}\n        >\n          <Delete />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const CategoryFilter = {\n  All: \"All\",\n};\nconst initialState = { category: CategoryFilter.All };\n\nconst categoriesSlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {\n    categoryChanged(state, action) {\n      console.log(state, action);\n      state.category = action.payload.category;\n    },\n  },\n});\n\nexport const { categoryChanged } = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\nexport const selectCategory = (state) => state.category.category;\n","import React from 'react'\r\n\r\nexport const Spinner = ({ text = '', size = '5em' }) => {\r\n    const header = text ? <h4>{text}</h4> : null\r\n    return (\r\n        <div className=\"spinner\">\r\n            {header}\r\n            <div className=\"loader\" style={{ height: size, width: size }} />\r\n        </div>\r\n    )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { page: 1 };\nconst pageSlice = createSlice({\n  name: \"page\",\n  initialState,\n  reducers: {\n    pageNext(state, action) {\n      //console.log(\"state = \", state);\n      //const nbPages = calcNbPages(state.movies.movies.length, state.sizepages.sizepages);\n      //state.page.page = Math.min(nbPages, state.page.page+1);\n      state.page = state.page + 1;\n    },\n    pagePrevious(state, action) {\n      state.page = state.page - 1;\n      //state.page.page = Math.max(1, state.page.page-1);\n    },\n    pageSelected(state, action) {\n      const { page } = action.payload;\n      state.page = page;\n    },\n  },\n});\n\nexport const { pageNext, pagePrevious, pageSelected } = pageSlice.actions;\nexport default pageSlice.reducer;\n\nexport const selectPage = (state) => state.page.page;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = { sizepages: 4 };\n\nconst sizepagesSlice = createSlice({\n  name: \"sizepages\",\n  initialState,\n  reducers: {\n    sizepagesChanged(state, action) {\n      state.sizepages = action.payload.sizepages;\n    },\n  },\n});\n\nexport const { sizepagesChanged } = sizepagesSlice.actions;\nexport default sizepagesSlice.reducer;\nexport const selectSizepages = (state) => state.sizepages.sizepages;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { pageNext, pagePrevious } from \"./pageSlice\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport MobileStepper from \"@mui/material/MobileStepper\";\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\nimport { Grid } from \"@mui/material\";\n\nexport function FormPages(props) {\n  const { firstElementIndex, lastElementIndex, numberElements, numberPages } =\n    props;\n  const dispatch = useDispatch();\n  const page = useSelector((state) => state.page.page);\n  const theme = useTheme();\n  const maxSteps = numberPages;\n\n  //flexDirection=\"row\" sx={{margin: '20px'}}\n  return (\n    <Grid container justifyContent=\"start\">\n      <Grid item xs={12} sm={6} md={3}>\n        <Typography\n          sx={{\n            m: 2,\n            display: \"flex\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n            height: 40,\n            bgcolor: \"background.default\",\n          }}\n        >{`Elements ${\n          firstElementIndex + 1\n        }-${lastElementIndex} of ${numberElements}`}</Typography>\n      </Grid>\n      <Grid item xs={12} sm={6} md={3}>\n        <MobileStepper\n          variant=\"text\"\n          steps={maxSteps}\n          position=\"static\"\n          activeStep={page - 1}\n          sx={{\n            m: 2,\n            display: \"flex\",\n            alignItems: \"center\",\n            height: 40,\n            bgcolor: \"background.default\",\n          }}\n          nextButton={\n            <Button\n              size=\"small\"\n              onClick={() => dispatch(pageNext())}\n              disabled={page === maxSteps}\n            >\n              Next\n              {theme.direction === \"rtl\" ? (\n                <KeyboardArrowLeft />\n              ) : (\n                <KeyboardArrowRight />\n              )}\n            </Button>\n          }\n          backButton={\n            <Button\n              size=\"small\"\n              onClick={() => dispatch(pagePrevious())}\n              disabled={page === 1}\n            >\n              {theme.direction === \"rtl\" ? (\n                <KeyboardArrowRight />\n              ) : (\n                <KeyboardArrowLeft />\n              )}\n              Back\n            </Button>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SingleMovieCard } from \"./SingleMovieCard\";\nimport {\n  fetchMovies,\n  selectMoviesError,\n  selectMoviesStatus,\n  selectMoviesByCategory,\n} from \"./moviesSlice\";\nimport { selectCategory } from \"../filters/categoriesSlice\";\nimport { Spinner } from \"../../components/Spinner\";\nimport { usePaginate } from \"../../helpers/usePaginate\";\nimport { Grid } from \"@mui/material\";\nimport { FormPages } from \"../pages/FormPages\";\n\nconst MovieExcerpt = ({ movie }) => {\n  return <SingleMovieCard key={movie.id} movie={movie} />;\n};\n\nexport const MoviesList = () => {\n  const dispatch = useDispatch();\n  const error = useSelector((state) => selectMoviesError(state));\n  const moviesStatus = useSelector((state) => selectMoviesStatus(state));\n  const category = useSelector((state) => selectCategory(state));\n  const filteredMovies = useSelector((state) =>\n    selectMoviesByCategory(state, category)\n  );\n\n  useEffect(() => {\n    if (moviesStatus === \"idle\") {\n      dispatch(fetchMovies());\n    }\n  }, [moviesStatus, dispatch]);\n\n  const { firstElementIndex, lastElementIndex, numberPages } =\n    usePaginate(filteredMovies);\n  const visibleMovies = filteredMovies.slice(\n    firstElementIndex,\n    lastElementIndex\n  );\n\n  let content;\n  if (moviesStatus === \"loading\") {\n    content = <Spinner text=\"Loading...\" />;\n  } else if (moviesStatus === \"succeeded\") {\n    content = (\n      <Grid container spacing={4}>\n        {visibleMovies.map((movie) => (\n          <Grid item key={movie.id} xs={12} sm={6} md={4}>\n            <MovieExcerpt key={movie.id} movie={movie} />\n          </Grid>\n        ))}\n      </Grid>\n    );\n  } else if (moviesStatus === \"failed\") {\n    content = <div>{error}</div>;\n  }\n\n  return (\n    <>\n      {content}\n      <FormPages\n        firstElementIndex={firstElementIndex}\n        lastElementIndex={lastElementIndex}\n        numberElements={filteredMovies.length}\n        numberPages={numberPages}\n      />\n    </>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { selectPage } from \"../features/pages/pageSlice\";\nimport { selectSizepages } from \"../features/sizepages/sizepagesSlice\";\n\nexport function usePaginate(movies) {\n  const page = useSelector((state) => selectPage(state));\n  const sizepages = useSelector((state) => selectSizepages(state));\n\n  const firstElementIndex = Math.min((page - 1) * sizepages, movies.length);\n  const lastElementIndex = Math.min(page * sizepages, movies.length);\n\n  const visibleMovies = movies.slice(firstElementIndex, lastElementIndex);\n  const numberPages = Math.max(Math.ceil(movies.length / sizepages), 1);\n  return { firstElementIndex, lastElementIndex, numberPages, visibleMovies };\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CategoryFilter, categoryChanged } from \"./categoriesSlice\";\nimport { pageSelected } from \"../pages/pageSlice\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nexport const Category = () => {\n  const dispatch = useDispatch();\n  const movies = useSelector((state) => state.movies.movies);\n  const categories = useSelector((state) => [\n    CategoryFilter.All,\n    ...new Set(movies.map((elem) => elem.category)),\n  ]);\n  const category = useSelector((state) => state.category.category);\n  return (\n    <>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"select-category\" label=\"Category\">\n          Category\n        </InputLabel>\n        <Select\n          labelId=\"select-category-label\"\n          id=\"select-category\"\n          value={category}\n          onChange={(event) => {\n            dispatch(categoryChanged({ category: event.target.value }));\n            dispatch(pageSelected({ page: 1 }));\n          }}\n          label=\"Category\"\n        >\n          {categories.map((category) => (\n            <MenuItem key={category} value={category}>\n              {category}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sizepagesChanged } from \"./sizepagesSlice\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\nimport { pageSelected } from \"../pages/pageSlice\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nconst SIZEPAGES = [4, 8, 12];\n\nexport const SizePages = () => {\n  const dispatch = useDispatch();\n  const sizepages = useSelector((state) => state.sizepages.sizepages);\n  return (\n    <>\n      <FormControl\n        variant=\"standard\"\n        sx={{ m: 1, minWidth: 120, marginLeft: \"auto\" }}\n      >\n        <InputLabel id=\"select-sizepages\" label=\"SizePages\">\n          SizePages\n        </InputLabel>\n        <Select\n          labelId=\"select-sizepages-label\"\n          id=\"select-sizepages\"\n          value={sizepages}\n          onChange={(event) => {\n            dispatch(sizepagesChanged({ sizepages: event.target.value }));\n            dispatch(pageSelected({ page: 1 }));\n          }}\n          label=\"SizePages\"\n        >\n          {SIZEPAGES.map((sizepages) => (\n            <MenuItem key={sizepages} value={sizepages}>\n              {sizepages}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport CameraIcon from \"@mui/icons-material/PhotoCamera\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n\nexport function MoviesAppBar() {\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar>\n        <CameraIcon sx={{ mr: 2 }} />\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Movies album\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Container, Box } from \"@mui/material\";\n\nexport function MoviesAppHeader() {\n  return (\n    <Box\n      sx={{\n        bgcolor: \"background.paper\",\n        pt: 8,\n        pb: 6,\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"text.primary\"\n          gutterBottom\n        >\n          Movies album\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"text.secondary\"\n          paragraph\n        >\n          Something about a movies album.\n        </Typography>\n      </Container>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Container, Box, CssBaseline } from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\n\nexport function MoviesAppFooter() {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"10vh\",\n      }}\n    >\n      <CssBaseline />\n      <Box\n        component=\"footer\"\n        sx={{\n          py: 3,\n          px: 2,\n          mt: \"auto\",\n          backgroundColor: grey[200],\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">Footer for my Movies App.</Typography>\n        </Container>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react'\nimport { MoviesList } from './features/movies/MoviesList'\nimport {Category} from \"./features/filters/Category\";\nimport {SizePages} from \"./features/sizepages/SizePages\";\nimport {MoviesAppBar} from \"./features/app/MoviesAppBar\";\nimport {MoviesAppHeader} from \"./features/app/Header\";\nimport {Grid} from \"@mui/material\";\nimport {MoviesAppFooter} from \"./features/app/Footer\";\n\nfunction App() {\n    return (\n        <>\n            <MoviesAppBar />\n            <MoviesAppHeader />\n            <Grid container>\n                <Category />\n                <SizePages />\n            </Grid>\n            <MoviesList />\n            <MoviesAppFooter />\n        </>\n    )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport moviesReducer from '../features/movies/moviesSlice'\nimport categoriesReducer from \"../features/filters/categoriesSlice\";\nimport sizepagesReducer from \"../features/sizepages/sizepagesSlice\";\nimport pageReducer from \"../features/pages/pageSlice\";\n\nexport const store = configureStore({\n    reducer: {\n        movies: moviesReducer,\n        category: categoriesReducer,\n        sizepages: sizepagesReducer,\n        page: pageReducer\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport {store} from './app/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}